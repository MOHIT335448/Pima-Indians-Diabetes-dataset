# -*- coding: utf-8 -*-
"""Pima_Diabetes.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1pj79CR0EtHkJVopur60DyuGwyXidG-w-

# Importing the Libraries
"""

import pandas as pd
import numpy as np

"""# Importing the dataset"""

dataset = pd.read_csv('diabetes.csv')
print('dataset size: ', dataset.shape)
dataset.head(5)

"""# Missing data <br> 
Check for missing data
"""

print(dataset.isnull().any())

dataset.describe()

x = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values
print('x size: ',x.shape, 'data type of x: ', type(x))
print('y size: ',y.shape, 'data type of y: ', type(y))

"""# Splitting the dataset into Training and Test set"""

from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test = train_test_split(x, y, test_size = 0.33, random_state = 0)

"""# Naive-Bayes Classification"""

from sklearn.naive_bayes import GaussianNB
gnb = GaussianNB()
gnb.fit(x_train, y_train)
y_pred_nb = gnb.predict(x_test)

"""# Confusion Matrices and Accuracy"""

from sklearn.metrics import confusion_matrix, accuracy_score, f1_score
cm_nb = confusion_matrix(y_test, y_pred_nb)
print('Confusion matrix of Naive Bayes: ', cm_nb, sep = "\n")

accuracy_nb = accuracy_score(y_test, y_pred_nb)
fscore_nb = f1_score(y_test, y_pred_nb)
print('Naive Bayes\nAccuracy: ', accuracy_nb, '\nF-score', fscore_nb)